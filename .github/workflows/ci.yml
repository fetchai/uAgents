name: CI

on:
  push:
    branches:
      - master
      - chore/initial-ci

  pull_request:
    branches:
      - master

jobs:
  linting:
    name: Lint & Formatting
    runs-on: ubuntu-latest
    strategy:
      matrix:
        #python-version: ["3.8", "3.9", "3.10"]
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

#    - name: cache poetry install
#      uses: actions/cache@v2
#      with:
#        path: ~/.local
#        key: poetry-1.2.1-0

    - uses: snok/install-poetry@v1
#      with:
#        version: 1.2.1
#        virtualenvs-create: true
#        virtualenvs-in-project: true

#    - name: cache deps
#      id: cache-deps
#      uses: actions/cache@v2
#      with:
#        path: .venv
#        key: pydeps-${{ hashFiles('**/poetry.lock') }}
#
#    - run: poetry install --no-interaction --no-root
#      if: steps.cache-deps.outputs.cache-hit != 'true'

    - run: poetry install --no-interaction

    - run: poetry run isort -c .
    - run: poetry run black --check .

#    - name: Install dependencies
#      run: |
#        python3 -m pip install --upgrade pip
#        pip install pylint
#
#    - name: Analysing the code with pylint
#      run: |
#        pylint $(git ls-files '*.py')