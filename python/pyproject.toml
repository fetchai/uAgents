[tool.poetry]
name = "uagents"
version = "0.16.1"
description = "Lightweight framework for rapid agent-based development"
authors = [
    "Ed FitzGerald <edward.fitzgerald@fetch.ai>",
    "James Riehl <james.riehl@fetch.ai>",
    "Alejandro Morales <alejandro.madrigal@fetch.ai>",
    "Florian Wilde <florian.wilde@fetch.ai>",
]
license = "Apache 2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = ">=3.9,<3.13"
pydantic = "~2.8"
msgpack = "^1.0.4"
bech32 = "^1.2.0"
ecdsa = "^0.19.0"
apispec = "^6.0.2"
uvicorn = "~0.30.1"
aiohttp = "^3.8.3"
cosmpy = "^0.9.2"
websockets = "^10.4"

# extras
fetchai-babble = { version = "^0.4.2", optional = true }
tortoise-orm = { version = "^0.19.2", optional = true }
geopy = { version = "^2.3.0", optional = true }
pyngrok = { version = "^5.2.3", optional = true }
fastapi = { version = "^0.111.0", optional = true }

[tool.poetry.group.dev.dependencies]
aioresponses = "^0.7.4"
pytest = "^7.1.3"
pytest-asyncio = "^0.23.8"
pytest-order = "^1.2.1"
mkdocs = "^1.4.2"
mkdocs-material = "^9.1.13"
ruff = "^0.6.0"
pre-commit = "^3.6.2"
pydoc-markdown = "^4.8.2"

[tool.poetry.extras]
all = ["tortoise-orm", "geopy", "fetchai-babble", "pyngrok", "fastapi"]
wallet = ["fetchai-babble"]
orm = ["tortoise-orm"]
geo = ["geopy"]
remote-agents = ["pyngrok"]
proxy = ["fastapi"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py310"

[tool.ruff.lint]
select = [
    # pycodestyle (Errors, Warnings)
    "E",
    "W",
    # Pyflakes
    "F",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # pep8-naming
    "N",
    # pylint
    "PL",
]
ignore = ["PLR0913", "PLR0912", "PLR0911", "PLR2004", "PLR0915"]

[tool.ruff.lint.pycodestyle]
max-line-length = 100
