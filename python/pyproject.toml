[tool.poetry]
name = "uagents"
version = "0.21.0"
description = "Lightweight framework for rapid agent-based development"
authors = [
    "Ed FitzGerald <edward.fitzgerald@fetch.ai>",
    "James Riehl <james.riehl@fetch.ai>",
    "Alejandro Morales <alejandro.madrigal@fetch.ai>",
    "Florian Wilde <florian.wilde@fetch.ai>",
]
license = "Apache 2.0"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.10"
pydantic = "^2.8"
bech32 = "^1.2.0"
ecdsa = "^0.19.0"
uvicorn = "^0.30.1"
aiohttp = "^3.8.3"
cosmpy = "^0.9.2"

# extras
fetchai-babble = { version = "^0.4.5", optional = true }

[tool.poetry.group.dev.dependencies]
aioresponses = "^0.7.8"
pytest = "^8.3.5"
pytest-asyncio = "^0.25.3"
pytest-order = "^1.3.0"
coverage = { version = "^7.6.12", extras = ["toml"] }
ruff = "^0.9.10"
pre-commit = "^4.1.0"
pydoc-markdown = "^4.8.2"

[tool.poetry.extras]
all = ["fetchai-babble"]
wallet = ["fetchai-babble"]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py312"

[tool.ruff.lint]
select = [
    # pycodestyle (Errors, Warnings)
    "E",
    "W",
    # Pyflakes
    "F",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # pep8-naming
    "N",
    # pylint
    "PL",
]
ignore = ["PLR0913", "PLR0912", "PLR0911", "PLR2004", "PLR0915"]

[tool.ruff.lint.pycodestyle]
max-line-length = 100

[tool.coverage.run]
source = ["src/uagents", "src\\uagents"]
omit = ["*/__init__.py", "*/experimental/*"]
relative_files = true

[tool.coverage.report]
exclude_also = [
    'def __repr__',
    'if self.debug:',
    'if settings.DEBUG',
    'raise AssertionError',
    'raise NotImplementedError',
    'if 0:',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
    'class .*\bProtocol\):',
    '@(abc\.)?abstractmethod',
]
